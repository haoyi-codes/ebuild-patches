Description: This patch removes the GCC dependency so it can compile on llvm only profiles.

Copyright (c) 2025 Aryan
SPDX-License-Identifier: BSD-3-Clause

Version: 1.0.0

--- nodejs.ebuild
+++ nodejs.ebuild
@@ -47,8 +47,7 @@
 		>=net-libs/ngtcp2-1.9.1:=
 		>=dev-libs/openssl-1.1.1:0=
 	)
-	!system-ssl? ( >=net-libs/ngtcp2-1.9.1:=[-gnutls] )
-	sys-devel/gcc:*"
+	!system-ssl? ( >=net-libs/ngtcp2-1.9.1:=[-gnutls] )"
 BDEPEND="${PYTHON_DEPS}
 	app-alternatives/ninja
 	sys-apps/coreutils
@@ -112,6 +111,9 @@
 	# bug 931256
 	use riscv && PATCHES+=( "${FILESDIR}"/${PN}-22.2.0-riscv.patch )

+        # Remove -latomic so it can be compiled without gcc.
+        use elibc_musl && PATCHES+=( "${FILESDIR}"/${PN}-no-libatomic.patch )
+
 	default
 }

@@ -120,20 +122,26 @@

 	# LTO compiler flags are handled by configure.py itself
 	filter-lto
-	# The warnings are *so* noisy and make build.logs massive
-	append-cxxflags $(test-flags-CXX -Wno-template-id-cdtor)
-	# GCC with -ftree-vectorize miscompiles node's exception handling code
-	# causing it to fail to catch exceptions sometimes
-	# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=116057
-	tc-is-gcc && append-cxxflags -fno-tree-vectorize
-	# https://bugs.gentoo.org/931514
-	use arm64 && append-flags $(test-flags-CXX -mbranch-protection=none)
-	# nodejs unconditionally links to libatomic #869992
-	# specifically it requires __atomic_is_lock_free which
-	# is not yet implemented by llvm-runtimes/compiler-rt (see
-	# https://reviews.llvm.org/D85044?id=287068), therefore
-	# we depend on gcc and force using libgcc as the support lib
-	tc-is-clang && append-ldflags "--rtlib=libgcc --unwindlib=libgcc"
+
+        if use elibc_musl; then
+            # Append atomic flags to compile without gcc.
+            append-atomic-flags
+        else
+	    # The warnings are *so* noisy and make build.logs massive
+	    append-cxxflags $(test-flags-CXX -Wno-template-id-cdtor)
+	    # GCC with -ftree-vectorize miscompiles node's exception handling code
+	    # causing it to fail to catch exceptions sometimes
+	    # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=116057
+	    tc-is-gcc && append-cxxflags -fno-tree-vectorize
+	    # https://bugs.gentoo.org/931514
+	    use arm64 && append-flags $(test-flags-CXX -mbranch-protection=none)
+	    # nodejs unconditionally links to libatomic #869992
+	    # specifically it requires __atomic_is_lock_free which
+	    # is not yet implemented by llvm-runtimes/compiler-rt (see
+	    # https://reviews.llvm.org/D85044?id=287068), therefore
+	    # we depend on gcc and force using libgcc as the support lib
+	    tc-is-clang && append-ldflags "--rtlib=libgcc --unwindlib=libgcc"
+        fi

 	local myconf=(
 		--ninja
